//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BioConnect
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect", ConfigurationName="BioConnect.BioConnect_Port")]
    public interface BioConnect_Port
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/BioConnect:GetStudents", ReplyAction="*")]
        System.Threading.Tasks.Task<BioConnect.GetStudents_Result> GetStudentsAsync(BioConnect.GetStudents request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/BioConnect:GetStaff", ReplyAction="*")]
        System.Threading.Tasks.Task<BioConnect.GetStaff_Result> GetStaffAsync(BioConnect.GetStaff request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStudents
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStudents", Namespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect", Order=0)]
        public BioConnect.GetStudentsBody Body;
        
        public GetStudents()
        {
        }
        
        public GetStudents(BioConnect.GetStudentsBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect")]
    public partial class GetStudentsBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string studentNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int entriesPerPage;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int pageNo;
        
        public GetStudentsBody()
        {
        }
        
        public GetStudentsBody(string studentNo, int entriesPerPage, int pageNo)
        {
            this.studentNo = studentNo;
            this.entriesPerPage = entriesPerPage;
            this.pageNo = pageNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStudents_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStudents_Result", Namespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect", Order=0)]
        public BioConnect.GetStudents_ResultBody Body;
        
        public GetStudents_Result()
        {
        }
        
        public GetStudents_Result(BioConnect.GetStudents_ResultBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect")]
    public partial class GetStudents_ResultBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string return_value;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string studentNo;
        
        public GetStudents_ResultBody()
        {
        }
        
        public GetStudents_ResultBody(string return_value, string studentNo)
        {
            this.return_value = return_value;
            this.studentNo = studentNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStaff", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect", IsWrapped=true)]
    public partial class GetStaff
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect", Order=0)]
        public string staffNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect", Order=1)]
        public int entriesPerPage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect", Order=2)]
        public int pageNo;
        
        public GetStaff()
        {
        }
        
        public GetStaff(string staffNo, int entriesPerPage, int pageNo)
        {
            this.staffNo = staffNo;
            this.entriesPerPage = entriesPerPage;
            this.pageNo = pageNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStaff_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect", IsWrapped=true)]
    public partial class GetStaff_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/BioConnect", Order=0)]
        public string return_value;
        
        public GetStaff_Result()
        {
        }
        
        public GetStaff_Result(string return_value)
        {
            this.return_value = return_value;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface BioConnect_PortChannel : BioConnect.BioConnect_Port, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class BioConnect_PortClient : System.ServiceModel.ClientBase<BioConnect.BioConnect_Port>, BioConnect.BioConnect_Port
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BioConnect_PortClient() : 
                base(BioConnect_PortClient.GetDefaultBinding(), BioConnect_PortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BioConnect_Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BioConnect_PortClient(EndpointConfiguration endpointConfiguration) : 
                base(BioConnect_PortClient.GetBindingForEndpoint(endpointConfiguration), BioConnect_PortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BioConnect_PortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BioConnect_PortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BioConnect_PortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BioConnect_PortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BioConnect_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BioConnect.GetStudents_Result> BioConnect.BioConnect_Port.GetStudentsAsync(BioConnect.GetStudents request)
        {
            return base.Channel.GetStudentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<BioConnect.GetStudents_Result> GetStudentsAsync(string studentNo, int entriesPerPage, int pageNo)
        {
            BioConnect.GetStudents inValue = new BioConnect.GetStudents();
            inValue.Body = new BioConnect.GetStudentsBody();
            inValue.Body.studentNo = studentNo;
            inValue.Body.entriesPerPage = entriesPerPage;
            inValue.Body.pageNo = pageNo;
            return ((BioConnect.BioConnect_Port)(this)).GetStudentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BioConnect.GetStaff_Result> BioConnect.BioConnect_Port.GetStaffAsync(BioConnect.GetStaff request)
        {
            return base.Channel.GetStaffAsync(request);
        }
        
        public System.Threading.Tasks.Task<BioConnect.GetStaff_Result> GetStaffAsync(string staffNo, int entriesPerPage, int pageNo)
        {
            BioConnect.GetStaff inValue = new BioConnect.GetStaff();
            inValue.staffNo = staffNo;
            inValue.entriesPerPage = entriesPerPage;
            inValue.pageNo = pageNo;
            return ((BioConnect.BioConnect_Port)(this)).GetStaffAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BioConnect_Port))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BioConnect_Port))
            {
                return new System.ServiceModel.EndpointAddress("http://41.89.49.64:7047/DynamicsNAV100/WS/KCA ERP/Codeunit/BioConnect");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return BioConnect_PortClient.GetBindingForEndpoint(EndpointConfiguration.BioConnect_Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return BioConnect_PortClient.GetEndpointAddress(EndpointConfiguration.BioConnect_Port);
        }
        
        public enum EndpointConfiguration
        {
            
            BioConnect_Port,
        }
    }
}
